/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block;
}

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit;
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic;
}

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000;
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/* font-style */
/* color style */
/* mixins */
.swing-in-top-bck {
  -webkit-animation: swing-in-top-bck 1.1s cubic-bezier(0.785, 0.135, 0.15, 0.86) both;
          animation: swing-in-top-bck 1.1s cubic-bezier(0.785, 0.135, 0.15, 0.86) both;
}

/* ----------------------------------------------
 * Generated by Animista on 2017-11-1 18:30:51
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-top-bck
 * ----------------------------------------
 */
@-webkit-keyframes swing-in-top-bck {
  from {
    opacity: 0;
    -webkit-transform: scale(0.1) rotate(30deg);
            transform: scale(0.1) rotate(30deg);
    -webkit-transform-origin: center bottom;
            transform-origin: center bottom;
  }
  50% {
    -webkit-transform: rotate(-10deg);
            transform: rotate(-10deg);
  }
  70% {
    -webkit-transform: rotate(3deg);
            transform: rotate(3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}
@keyframes swing-in-top-bck {
  from {
    opacity: 0;
    -webkit-transform: scale(0.1) rotate(30deg);
            transform: scale(0.1) rotate(30deg);
    -webkit-transform-origin: center bottom;
            transform-origin: center bottom;
  }
  50% {
    -webkit-transform: rotate(-10deg);
            transform: rotate(-10deg);
  }
  70% {
    -webkit-transform: rotate(3deg);
            transform: rotate(3deg);
  }
  to {
    opacity: 1;
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

.swing-in-bottom-bck {
  -webkit-animation: swing-in-bottom-bck 0.65s cubic-bezier(0.755, 0.05, 0.855, 0.06) both;
          animation: swing-in-bottom-bck 0.65s cubic-bezier(0.755, 0.05, 0.855, 0.06) both;
}

/* ----------------------------------------------
 * Generated by Animista on 2017-11-1 20:12:19
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-bottom-bck
 * ----------------------------------------
 */
/* ----------------------------------------------
 * Generated by Animista on 2017-11-1 20:17:7
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation swing-in-bottom-bck
 * ----------------------------------------
 */
@-webkit-keyframes swing-in-bottom-bck {
  0% {
    -webkit-transform: translateY(0) scaleY(1) scaleX(1);
            transform: translateY(0) scaleY(1) scaleX(1);
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: translateY(1000px) scaleY(2) scaleX(0.2);
            transform: translateY(1000px) scaleY(2) scaleX(0.2);
    -webkit-transform-origin: 50% 100%;
            transform-origin: 50% 100%;
    -webkit-filter: blur(40px);
            filter: blur(40px);
    opacity: 0;
  }
}
@keyframes swing-in-bottom-bck {
  0% {
    -webkit-transform: translateY(0) scaleY(1) scaleX(1);
            transform: translateY(0) scaleY(1) scaleX(1);
    -webkit-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-filter: blur(0);
            filter: blur(0);
    opacity: 1;
  }
  100% {
    -webkit-transform: translateY(1000px) scaleY(2) scaleX(0.2);
            transform: translateY(1000px) scaleY(2) scaleX(0.2);
    -webkit-transform-origin: 50% 100%;
            transform-origin: 50% 100%;
    -webkit-filter: blur(40px);
            filter: blur(40px);
    opacity: 0;
  }
}

body,
html {
  font-family: "Oswald", sans-serif;
  margin: 0 auto;
  width: 100vw;
  height: 100%;
  padding: 0;
  overflow: hidden;
  background-color: #012A42;
}

/* animacje */
.heartbeat {
  -webkit-animation: heartbeat 2.5s ease-in-out infinite both;
          animation: heartbeat 2.5s ease-in-out infinite both;
}

/* ----------------------------------------------
 * Generated by Animista on 2017-9-14 21:0:44
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */
/**
 * ----------------------------------------
 * animation heartbeat
 * ----------------------------------------
 */
@-webkit-keyframes heartbeat {
  from {
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  10% {
    -webkit-transform: scale(0.91);
            transform: scale(0.91);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  17% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  33% {
    -webkit-transform: scale(0.87);
            transform: scale(0.87);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  45% {
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
}
@keyframes heartbeat {
  from {
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-transform-origin: center center;
            transform-origin: center center;
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  10% {
    -webkit-transform: scale(0.91);
            transform: scale(0.91);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  17% {
    -webkit-transform: scale(0.98);
            transform: scale(0.98);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
  33% {
    -webkit-transform: scale(0.87);
            transform: scale(0.87);
    -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
  }
  45% {
    -webkit-transform: scale(1);
            transform: scale(1);
    -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
  }
}

.slide-in-elliptic-top-fwd {
  -webkit-animation: slide-in-elliptic-top-fwd 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
          animation: slide-in-elliptic-top-fwd 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;
}

@-webkit-keyframes slide-in-elliptic-top-fwd {
  0% {
    -webkit-transform: translateY(-600px) rotateX(-30deg) scale(0);
            transform: translateY(-600px) rotateX(-30deg) scale(0);
    -webkit-transform-origin: 50% 100%;
            transform-origin: 50% 100%;
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0) rotateX(0) scale(1);
            transform: translateY(0) rotateX(0) scale(1);
    -webkit-transform-origin: 50% 1400px;
            transform-origin: 50% 1400px;
    opacity: 1;
  }
}

@keyframes slide-in-elliptic-top-fwd {
  0% {
    -webkit-transform: translateY(-600px) rotateX(-30deg) scale(0);
            transform: translateY(-600px) rotateX(-30deg) scale(0);
    -webkit-transform-origin: 50% 100%;
            transform-origin: 50% 100%;
    opacity: 0;
  }
  100% {
    -webkit-transform: translateY(0) rotateX(0) scale(1);
            transform: translateY(0) rotateX(0) scale(1);
    -webkit-transform-origin: 50% 1400px;
            transform-origin: 50% 1400px;
    opacity: 1;
  }
}

.btn {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: 2px solid #e74c3c;
  border-radius: 0.6em;
  color: #e74c3c;
  cursor: pointer;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-item-align: center;
      align-self: center;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1;
  margin: 20px;
  padding: 1.2em 2.8em;
  text-decoration: none;
  text-align: center;
  text-transform: uppercase;
  font-weight: 700;
  fon-family: "Oswald", sans-serif;
}

.btn:hover, .btn:focus {
  color: #fff;
}

.fourth {
  border-color: #f1c40f;
  color: #fff;
  background-image: -o-linear-gradient(45deg, #f1c40f 50%, transparent 50%);
  background-image: linear-gradient(45deg, #f1c40f 50%, transparent 50%);
  background-position: 100%;
  background-size: 400%;
  -webkit-transition: background 300ms ease-in-out;
  -o-transition: background 300ms ease-in-out;
  transition: background 300ms ease-in-out;
}

.fourth:hover {
  background-position: 0;
}

.sixth {
  border-radius: 3em;
  border-color: #2ecc71;
  color: #2ecc71;
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(50%, transparent), color-stop(50%, #2ecc71));
  background-image: -o-linear-gradient(top, transparent 50%, #2ecc71 50%);
  background-image: linear-gradient(to bottom, transparent 50%, #2ecc71 50%);
  background-position: 0% 0%;
  background-size: 210%;
  -webkit-transition: background 150ms ease-in-out, color 150ms ease-in-out;
  -o-transition: background 150ms ease-in-out, color 150ms ease-in-out;
  transition: background 150ms ease-in-out, color 150ms ease-in-out;
}

.sixth:hover {
  color: #fff;
  background-position: 0 100%;
}

.js .load, .js #loader-wrapper {
  display: block;
}

#loader-wrapper {
  position: fixed;
  padding: 30px auto;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  background: #ECF0F1;
  display: none;
}

.load {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 100px;
  height: 100px;
  /* display: none; */
}

.load hr {
  border: 0;
  margin: 0;
  width: 40%;
  height: 40%;
  position: absolute;
  border-radius: 50%;
  -webkit-animation: spin 2s ease infinite;
          animation: spin 2s ease infinite;
}

.load :first-child {
  background: #19A68C;
  -webkit-animation-delay: -1.5s;
          animation-delay: -1.5s;
}

.load :nth-child(2) {
  background: #F63D3A;
  -webkit-animation-delay: -1s;
          animation-delay: -1s;
}

.load :nth-child(3) {
  background: #FDA543;
  -webkit-animation-delay: -0.5s;
          animation-delay: -0.5s;
}

.load :last-child {
  background: #193B48;
}

@-webkit-keyframes spin {
  0%, 100% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
  25% {
    -webkit-transform: translate(160%);
            transform: translate(160%);
  }
  50% {
    -webkit-transform: translate(160%, 160%);
            transform: translate(160%, 160%);
  }
  75% {
    -webkit-transform: translate(0, 160%);
            transform: translate(0, 160%);
  }
}

@keyframes spin {
  0%, 100% {
    -webkit-transform: translate(0);
            transform: translate(0);
  }
  25% {
    -webkit-transform: translate(160%);
            transform: translate(160%);
  }
  50% {
    -webkit-transform: translate(160%, 160%);
            transform: translate(160%, 160%);
  }
  75% {
    -webkit-transform: translate(0, 160%);
            transform: translate(0, 160%);
  }
}

.page__header {
  position: fixed;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 10px;
  width: 100%;
  z-index: 5;
  background-color: #012A42;
}

.header__logo {
  height: auto;
  width: 80px;
}

.nav__btn {
  padding: 10px;
  color: #E7541E;
}

.nav__btn:focus ~ .header__menu {
  display: block;
}

@media (min-width: 769px) {
  .nav__btn {
    display: none;
  }
}

.header__nav {
  position: relative;
}

.header__menu {
  position: absolute;
  display: none;
  top: 74px;
  right: 0px;
  width: 200px;
  list-style-type: none;
  padding: 0;
  background-color: #012A42;
  translate: 0.5s;
}

@media (min-width: 769px) {
  .header__menu {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    position: static;
    width: auto;
  }
}

.elem__link {
  text-align: center;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  display: block;
  padding: 10px 30px;
  text-decoration: none;
  text-transform: uppercase;
  width: 100%;
  font-size: 1.4rem;
  color: #f1c40f;
}

.snip1488 {
  text-align: center;
  text-transform: uppercase;
  font-weight: 500;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

.snip1488 * {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

.snip1488 li {
  display: inline-block;
  list-style: outside none none;
  margin: 0.5em 1em;
  overflow: hidden;
  position: relative;
  border-radius: 3px;
}

.snip1488 li:before,
.snip1488 li:after {
  display: block;
}

.snip1488 li:before {
  bottom: 0%;
}

.snip1488 li:after {
  bottom: 50%;
}

.snip1488 a {
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  display: block;
  padding: 0.5em 1em;
  position: relative;
  text-align: center;
  text-decoration: none;
}

.snip1488 a:before {
  bottom: 25%;
}

.snip1488 a:after {
  bottom: 75%;
}

.snip1488 li:before,
.snip1488 li:after,
.snip1488 a:before,
.snip1488 a:after {
  background-color: #185E65;
  position: absolute;
  height: 25%;
  left: 50%;
  right: 50%;
  content: '';
  z-index: -1;
  opacity: 0;
  -webkit-transition: all 0.3s ease;
  -o-transition: all 0.3s ease;
  transition: all 0.3s ease;
}

.snip1488 li:before {
  -webkit-transition-delay: 0.15s;
  -o-transition-delay: 0.15s;
     transition-delay: 0.15s;
}

.snip1488 li:after {
  -webkit-transition-delay: 0.05s;
  -o-transition-delay: 0.05s;
     transition-delay: 0.05s;
}

.snip1488 a:before {
  -webkit-transition-delay: 0.1s;
  -o-transition-delay: 0.1s;
     transition-delay: 0.1s;
}

.snip1488 a:after {
  -webkit-transition-delay: 0s;
  -o-transition-delay: 0s;
     transition-delay: 0s;
}

.snip1488 li:hover:before,
.snip1488 li.current:before,
.snip1488 li:hover:after,
.snip1488 li.current:after,
.snip1488 li:hover a:before,
.snip1488 li.current a:before,
.snip1488 li:hover a:after,
.snip1488 li.current a:after {
  left: 0;
  right: 0;
  opacity: 1;
}

.snip1488 li:hover:before,
.snip1488 li.current:before {
  -webkit-transition-delay: 0.3s;
  -o-transition-delay: 0.3s;
     transition-delay: 0.3s;
}

.snip1488 li:hover:after,
.snip1488 li.current:after {
  -webkit-transition-delay: 0.1s;
  -o-transition-delay: 0.1s;
     transition-delay: 0.1s;
}

.snip1488 li:hover a:before,
.snip1488 li.current a:before {
  -webkit-transition-delay: 0.2s;
  -o-transition-delay: 0.2s;
     transition-delay: 0.2s;
}

.snip1488 li:hover a:after,
.snip1488 li.current a:after {
  -webkit-transition-delay: 0s;
  -o-transition-delay: 0s;
     transition-delay: 0s;
}

.page__opening {
  position: fixed;
  background-color: #012A42;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  z-index: 2;
}

.opening__picture {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-line-pack: center;
      align-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

@media (min-width: 769px) {
  .opening__picture {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    width: 100%;
  }
}

.opening__pageName {
  text-align: center;
  color: #E7541E;
  padding: 20px;
  font-family: "Roboto", sans-serif;
  background-color: rgba(0, 0, 0, 0.5);
}

.opening__info {
  text-align: center;
  color: #E7541E;
  padding: 20px;
  font-family: "Roboto", sans-serif;
  background-color: rgba(0, 0, 0, 0.8);
}

.opening__api {
  color: #f1c40f;
  text-decoration: none;
}

.opening__description {
  -ms-flex-preferred-size: 50%;
      flex-basis: 50%;
  overflow: scroll;
  text-align: justify;
  padding: 20px;
  color: #f1c40f;
}

@media (min-width: 769px) {
  .opening__description {
    -ms-flex-preferred-size: 100%;
        flex-basis: 100%;
    overflow: auto;
  }
}

.picture__autor {
  margin: 10px;
  color: #9E1617;
  font-weight: bold;
}

.picture__title {
  margin: 10px;
  color: #9E1617;
  font-weight: bold;
}

.picture__figure {
  letter-spacing: 2px;
  line-height: 1.4rem;
}

.picture__hd {
  text-decoration: none;
  color: #9E1617;
  font-weight: bold;
}

.opening__start {
  position: relative;
  border: none;
  height: 50px;
  color: #f1c40f;
  background: transparent;
  text-transform: uppercase;
  letter-spacing: 2px;
  cursor: pointer;
  -webkit-transition: width 2s;
  -o-transition: width 2s;
  transition: width 2s;
}

.opening__start:after {
  position: absolute;
  content: '';
  background-color: #9E1617;
  bottom: -1px;
  width: 0%;
  height: 1px;
  left: 0;
  right: 0;
  margin: auto;
  -webkit-transition: width 0.5s;
  -o-transition: width 0.5s;
  transition: width 0.5s;
}

.opening__start:hover:after {
  width: 80%;
}

.gallery__modal {
  position: fixed;
  height: 100vh;
  left: 0;
  top: 0;
  right: 0;
  z-index: 999;
  background: rgba(0, 0, 0, 0.9);
  padding: 20px;
  overflow: scroll;
}

.modal__close {
  display: block;
  margin: auto;
  background-color: green;
  position: absolute;
  top: 50px;
  right: 10%;
  -webkit-transform: translate(-50%, 50%);
      -ms-transform: translate(-50%, 50%);
          transform: translate(-50%, 50%);
  width: 30px;
  height: 30px;
  padding: 5px;
  margin: 0;
  background-color: transparent;
}

.modal__desc {
  color: #E7541E;
  overflow: auto;
  padding: 0px 0px 20px 0px;
  text-align: justify;
  line-height: 1.3rem;
  text-indent: 20px;
}

@media (min-width: 768px) {
  .modal__desc {
    font-size: 1.9rem;
    line-height: 2.1rem;
    max-width: 1200px;
    margin: 0 auto;
  }
}

.modal__img {
  display: block;
  margin: 10px auto;
  width: 100%;
  height: auto;
  position: relative;
}

@media (min-width: 768px) {
  .modal__img {
    max-width: 1000px;
  }
}

.page__main {
  padding-top: 90px;
  width: 100%;
  min-height: auto;
  background-color: #012A42;
  margin: 0 auto;
}

@media (min-width: 1024px) {
  .page__main {
    max-width: 1200px;
  }
}

.snip1508 {
  position: relative;
  float: left;
  overflow: hidden;
  margin: 10px 1%;
  min-width: 230px;
  max-width: 315px;
  width: 100%;
  color: #ffffff;
  text-align: left;
  font-size: 16px;
}

.snip1508 * {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-transition: all 0.45s ease;
  -o-transition: all 0.45s ease;
  transition: all 0.45s ease;
}

.snip1508 img {
  vertical-align: top;
  max-width: 100%;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

.snip1508 figcaption {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  padding: 30px;
  -webkit-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
      transform: translateX(-100%);
}

@media (max-width: 768px) {
  .snip1508 figcaption {
    -webkit-transform: translateX(0%);
        -ms-transform: translateX(0%);
            transform: translateX(0%);
  }
}

.snip1508 h2,
.snip1508 h3,
.snip1508 p {
  margin: 0;
  pointer-events: none;
}

.snip1508 h2 {
  font-size: 1.9rem;
  color: #185E65;
  padding: 5px;
  background-color: rgba(241, 196, 15, 0.9);
  text-align: center;
}

@media (max-width: 768px) {
  .snip1508 h2 {
    font-size: 1.1rem;
  }
}

.snip1508 h3 {
  color: #EBEBEB;
  font-size: 1.3rem;
  font-weight: normal;
  letter-spacing: 1px;
}

.snip1508 p {
  font-size: 0.9em;
  margin-top: 12px;
  padding: 12px 0 15px;
  line-height: 1.5em;
}

.snip1508 a {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1;
}

.snip1508:hover figcaption,
.snip1508.hover figcaption {
  -webkit-transform: translateX(0%);
      -ms-transform: translateX(0%);
          transform: translateX(0%);
}

.gallery {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

.gallery__header {
  color: #9E1617;
}

.gallery__list {
  padding: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-align: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  list-style-type: none;
}

.gallery__elem {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  position: relative;
  cursor: pointer;
  margin: 10px;
}

.elem__img {
  width: 300px;
  height: auto;
  margin: 10px;
  cursor: -webkit-zoom-in;
  cursor: zoom-in;
}

.elem__title {
  position: absolute;
  left: 5%;
  right: 5%;
  top: 5%;
  bottom: 5%;
  text-shadow: 2px 2px 5px black;
  letter-spacing: .2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  text-align: center;
  color: white;
  font-size: 25px;
  pointer-events: none;
}

/* FOOTER */
.page__footer {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -ms-flex-wrap: nowrap;
      flex-wrap: nowrap;
  background-color: red;
  text-align: center;
}

.footer__img {
  width: 20px;
  margin: 0 10px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
